$date
	Fri Jun  6 03:16:30 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ripplecarry_adder_tb $end
$var wire 8 ! tb_sum [7:0] $end
$var wire 1 " tb_carryOut $end
$var parameter 32 # NUM_TESTS $end
$var reg 1 $ clk $end
$var reg 9 % expected [8:0] $end
$var reg 8 & prev_a [7:0] $end
$var reg 8 ' prev_b [7:0] $end
$var reg 8 ( tb_a [7:0] $end
$var reg 8 ) tb_b [7:0] $end
$var reg 1 * done_flag $end
$var integer 32 + fail_count [31:0] $end
$var reg 1 , fatal_on_error $end
$var integer 32 - pass_count [31:0] $end
$var integer 32 . rand_val [31:0] $end
$scope module dut $end
$var wire 8 / a [7:0] $end
$var wire 8 0 b [7:0] $end
$var wire 8 1 sum [7:0] $end
$var wire 1 " carryOut $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10100 #
$end
#0
$dumpvars
b0 2
bx 1
bx 0
bx /
b0 .
b0 -
0,
b0 +
0*
bx )
bx (
bx '
bx &
bx %
0$
x"
bx !
$end
#5000
1$
#10000
0$
#15000
1$
#20000
0$
#25000
1$
#30000
0$
#35000
b11010010 !
b11010010 1
0"
b1 +
b1 2
b1000000 '
b10010010 &
b11010010 %
b1000000 )
b1000000 0
b10010010 (
b10010010 /
b1000000 .
1$
#40000
0$
#45000
b110101 !
b110101 1
b10 +
b10 2
b110001 '
b100 &
b110101 %
b110001 )
b110001 0
b100 (
b100 /
b110001 .
1$
#50000
0$
#55000
1"
b1001100 !
b1001100 1
b11 +
b11 2
b11000110 '
b10000110 &
b101001100 %
b11000110 )
b11000110 0
b10000110 (
b10000110 /
b11000110 .
1$
#60000
0$
#65000
b111011 !
b111011 1
0"
b100 +
b100 2
b1001 '
b110010 &
b111011 %
b1001 )
b1001 0
b110010 (
b110010 /
b1001 .
1$
#70000
0$
#75000
1"
b110 !
b110 1
b101 +
b101 2
b10000110 '
b10000000 &
b100000110 %
b10000110 )
b10000110 0
b10000000 (
b10000000 /
b10000110 .
1$
#80000
0$
#85000
b1011001 !
b1011001 1
b110 +
b110 2
b10011110 '
b10111011 &
b101011001 %
b10011110 )
b10011110 0
b10111011 (
b10111011 /
b10011110 .
1$
#90000
0$
#95000
b10111100 !
b10111100 1
b111 +
b111 2
b11000110 '
b11110110 &
b110111100 %
b11000110 )
b11000110 0
b11110110 (
b11110110 /
b11000110 .
1$
#100000
0$
#105000
b1011111 !
b1011111 1
b1000 +
b1000 2
b1100011 '
b11111100 &
b101011111 %
b1100011 )
b1100011 0
b11111100 (
b11111100 /
b1100011 .
1$
#110000
0$
#115000
b10110111 !
b10110111 1
0"
b1001 +
b1001 2
b1010101 '
b1100010 &
b10110111 %
b1010101 )
b1010101 0
b1100010 (
b1100010 /
b1010101 .
1$
#120000
0$
#125000
b101101 !
b101101 1
1"
b1010 +
b1010 2
b111011 '
b11110010 &
b100101101 %
b111011 )
b111011 0
b11110010 (
b11110010 /
b111011 .
1$
#130000
0$
#135000
b11010000 !
b11010000 1
0"
b1011 +
b1011 2
b11000111 '
b1001 &
b11010000 %
b11000111 )
b11000111 0
b1001 (
b1001 /
b11000111 .
1$
#140000
0$
#145000
b1100000 !
b1100000 1
1"
b1100 +
b1100 2
b1100111 '
b11111001 &
b101100000 %
b1100111 )
b1100111 0
b11111001 (
b11111001 /
b1100111 .
1$
#150000
0$
#155000
b11010110 !
b11010110 1
0"
b1101 +
b1101 2
b1100010 '
b1110100 &
b11010110 %
b1100010 )
b1100010 0
b1110100 (
b1110100 /
b1100010 .
1$
#160000
0$
#165000
b1100 !
b1100 1
1"
b1110 +
b1110 2
b1011110 '
b10101110 &
b100001100 %
b1011110 )
b1011110 0
b10101110 (
b10101110 /
b1011110 .
1$
#170000
0$
#175000
b1001000 !
b1001000 1
0"
b1111 +
b1111 2
b110010 '
b10110 &
b1001000 %
b110010 )
b110010 0
b10110 (
b10110 /
b110010 .
1$
#180000
0$
#185000
b10110110 !
b10110110 1
b10000 +
b10000 2
b10000101 '
b110001 &
b10110110 %
b10000101 )
b10000101 0
b110001 (
b110001 /
b10000101 .
1$
#190000
0$
#195000
b11010000 !
b11010000 1
b10001 +
b10001 2
b10010000 '
b1000000 &
b11010000 %
b10010000 )
b10010000 0
b1000000 (
b1000000 /
b10010000 .
1$
#200000
0$
#205000
b100011 !
b100011 1
1"
b10010 +
b10010 2
b1001110 '
b11010101 &
b100100011 %
b1001110 )
b1001110 0
b11010101 (
b11010101 /
b1001110 .
1$
#210000
0$
#215000
b1010100 !
b1010100 1
0"
b10011 +
b10011 2
b1001 '
b1001011 &
b1010100 %
b1001 )
b1001 0
b1001011 (
b1001011 /
b1001 .
1$
#220000
0$
#225000
b101111 !
b101111 1
1*
b10100 2
b101001 '
b110 &
b101111 %
b101001 )
b101001 0
b110 (
b110 /
b101001 .
1$
